from http.server import BaseHTTPRequestHandler, HTTPServer
import os
import subprocess
import cgi
import shutil

# Define the paths
json_path_folder = r'C:\Users\Win10\Desktop\Integration\Server2\Code\File.json'
processing_file_path = r'C:\Users\Win10\Desktop\Integration\Server2\Code\json_processing.py'
zip_file_path = r"C:\Users\Win10\Desktop\Integration\Server2\Code\Results\Code.zip"
log_file_path = r"C:\Users\Win10\Desktop\Integration\Server2\Code\Results\Code\log.txt"


# Defining the handler class for the server
class MyHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        # Parse the form data posted
        form = cgi.FieldStorage(
            fp=self.rfile,
            headers=self.headers,
            environ={'REQUEST_METHOD': 'POST'}
        )
        directory_path = "C:/Users/Win10/Desktop/Integration/Server2/Code/Results/Code"
        # Storage directory is used to store the zip files or results
        storage = "C:/Users/Win10/Desktop/Integration/Server2/Code/Results/storage"
        os.makedirs(storage, exist_ok=True)
        os.makedirs(directory_path, exist_ok=True)
        with open(log_file_path, 'w') as f:
            f.write("Request received\n")

        # Check if 'file' field exists in the form
        if 'file' in form:
            file_item = form['file']
            # Save the received file
            file_path = json_path_folder
            with open(file_path, 'wb') as f:
                f.write(file_item.file.read())
            try:
                subprocess.run(['python', processing_file_path])
            except Exception as e:
                with open(log_file_path, 'a') as f:
                    f.write(f"Error processing file: {str(e)}\n")
                print(f"Error processing file: {str(e)}")
            # Send the zip file as response
            if os.path.exists(zip_file_path):
                print("Zip file found")
                print("Sending zip file...")
                with open(zip_file_path, 'rb') as f:
                    zip_content = f.read()
                self.send_response(200)
                self.send_header('Content-type', 'application/zip')
                self.end_headers()
                self.wfile.write(zip_content)
                shutil.move(zip_file_path, storage)
            else:
                print("Zip file not found")
                self.send_response(404)
                self.end_headers()
                self.wfile.write(b'Zip file not found')
                self.send_response(200)
                self.send_header('Content-type', 'text/plain')
                self.end_headers()
                self.wfile.write(b'File received successfully')
        else:
            self.send_response(400)
            self.end_headers()
            self.wfile.write(b'No file provided in the request')

def run(server_class=HTTPServer, handler_class=MyHandler, port=8003):
    server_address = ('', port)
    # Creating an instance of the server
    httpd = server_class(server_address, handler_class)
    print(f'Starting server on port {port}...')
    httpd.serve_forever()

if __name__ == "__main__":
    run()

